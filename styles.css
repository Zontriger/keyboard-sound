* {
	margin: 0;
	font-family: system-ui, sans-serif;
}

:root {
	--color-bg-primary: #2C2C36;
	--color-bg-secondary: #32323C;
	
	--color-primary: #333468;
	--color-secondary: #43498D;
	--color-tertiary: #696FBB;
	--color-shadow: #1E1E28;
	
	--color-error-primary: #6F2525;
	--color-error-secondary: #B43131;
	--color-error-shadow: #391010;
	
	--text-primary: white;
	--text-secondary: lightgray;
	--text-error: #D9C4C4;
	
	--color-accent-primary: blue;
	--color-accent-secondary: darkblue;
}

#container {
	display: flex;
	flex-direction: column;
	align-items: center;
	background: var(--color-bg-primary);
	min-width: max(16rem, 100dvw);
	min-height: max(16rem, 100dvh);
	box-sizing: border-box;
	color: var(--text-primary);
	overflow: auto;
	flex-shrink: 0;
}

.title {
	margin: 10dvh 1rem 1.2rem 1rem;
}

.keyboard-sound {
	flex: 1;
	max-width: 50rem;
	display: flex;
	flex-direction: column;
	width: 100%;
}

.loading-container, .no-loaded {
	flex: 0 1 40dvh;
	display: flex;
	align-items: center;
	justify-content: center;
}

.no-loaded {
	flex-direction: column;
	background: var(--color-error-primary);
	border-radius: 0.8rem;
	color: var(--text-error);
	text-align: center;
	padding: 1rem;
	margin: 1rem;
	box-shadow: 0 3px 10px var(--color-shadow);
	gap: 1.5rem;
}

.no-loaded > div > h3 {
	color: white;
	margin-bottom: 0.4rem;
}

.reload {
	background: var(--color-error-secondary);
	border: 0;
	border-radius: 0.8rem;
	padding: 0.8rem 2rem;
	box-shadow: 0 4px 10px var(--color-error-shadow);
	transition: all 100ms ease-out;
	color: white;
	font-size: 1.1rem;
	user-select: none;
	cursor: pointer;
}

.reload:hover {
	transform: scale(1.1);
}

.reload:active {
	box-shadow: none;
	transform: scale(0.9);
}

.loading-spin {
	width: 1.2rem;
	height: 1.2rem;
	border-radius: 9999px;
	position: relative;
	background: var(--color-bg-primary);
}

.loading-spin::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	z-index: -1;
	border-radius: 9999px;
	background: conic-gradient(from var(--angle), transparent, var(--color-accent-primary) 50%, var(--color-accent-primary) 60%, transparent 60%);
	animation: spin 500ms linear infinite;
}

.loading-spin::before {
	--border: 0.2rem;
	border-radius: calc(1rem + var(--border));
	padding: var(--border); 
}

.type-keyboard-sound-radios {
	display: flex;
	max-width: 100%;
	overflow-x: auto;
	padding: 0.6rem 1rem;
	gap: 0.8rem
}

.type-keyboard-sound-radios > label > input[name="type-keyboard-sound"] {
	display: none;
}

.type-keyboard-sound-radios > label {
	flex: 0 0 6rem;
	padding: 1rem;
	border-radius: 1rem;
	font-size: 1.2rem;
	text-align: center;
	position: relative;
	background: var(--color-secondary);
	box-sizing: border-box;
	transition: all 100ms ease-out;
	user-select: none;
	cursor: pointer;
	isolation: isolate;
}

.type-keyboard-sound-radios > label:hover, 
.type-keyboard-sound-radios > label:has(input[name="type-keyboard-sound"]:checked) {
	transform: scale(1.1);
}

@property --angle {
	syntax: "<angle>";
	initial-value: 0deg;
	inherits: false;
}

.type-keyboard-sound-radios > label::before, 
.type-keyboard-sound-radios > label::after {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	z-index: -1;
}

.type-keyboard-sound-radios > label::before {
	border-radius: 1rem;
	box-shadow: 0 3px 5px var(--color-shadow);
}

.type-keyboard-sound-radios > label::after {
	--border: 1px;
	border-radius: calc(1rem + var(--border));
	padding: var(--border);
}

.type-keyboard-sound-radios > label:has(input[name="type-keyboard-sound"]:checked)::before,
.type-keyboard-sound-radios > label:has(input[name="type-keyboard-sound"]:checked)::after {
	background: conic-gradient(from var(--angle), transparent, var(--color-accent-primary) 25%, var(--color-accent-primary) 50%, transparent 50%, var(--color-accent-primary) 75%);
	animation: spin 3s linear infinite;
}

.type-keyboard-sound-radios > label:has(input[name="type-keyboard-sound"]:checked)::before {
	filter: blur(0.7rem);
}

.type-keyboard-sound-radios > label:has(input[name="type-keyboard-sound"]:checked) {
	background: var(--color-accent-secondary);
}

@keyframes spin {
	from {
		--angle: 0deg;
	}
	to {
		--angle: 360deg;
	}
}

.keys-input {
	display: flex;
	position: relative;
	height: fit-content;
}

.keys-input > button {
	display: flex;
	justify-content: center;
	align-items: center;
	visibility: hidden;
	position: absolute;
	bottom: 0.2rem;
	right: 0.2rem;
	width: 3rem;
	height: 3rem;
	padding: 0.5rem;
	border-radius: 2rem;
	background: var(--color-bg-primary);
	font-size: 1.5rem;
	color: var(--text-secondary);
	transition: transform ease-out 50ms;
	opacity: 0.7;
	margin: 1rem;
	cursor: pointer;
	user-select: none;
}

.keys-input > button:active {
	background: var(--color-bg-secondary);
	transform: scale(0.85);
}

.keys-input > textarea {
	flex: 1 0;
	min-height: 5rem;
	max-height: 50rem;
	overflow: hidden;
	background: var(--color-bg-secondary);
	border: 0;
	border-radius: 15px;
	box-shadow: 0 3px 10px var(--color-shadow);
	outline: 0;
	color: var(--text-primary);
	font-size: 1.5rem;
	padding: 1rem;
	margin: 1rem;
}